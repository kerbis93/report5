{"uid":"92236d49c45c193e","name":"Verify that tags count as search term with semantic engine","fullName":"Verify that tags count as search term with semantic engine","historyId":"7a86283407efcf82ab5dabe178480d26","time":{"start":1690718123270,"stop":1690718154681,"duration":31411},"descriptionHtml":"<pre>Test user that add tags to the search term, verify that:70% of the returned tracks are associated with the TERM+TAGS from the dataset. {\n  <span class=\"string key\">\"query\"</span>: <span class=\"string value\">\"query SfxList($categoryIds: String!, $sortBy: SfxListRequestSortByOptions!, $tags: String!, $term: String!, $page: Float!) {\n  sfxList(categoryIds: $categoryIds, sortBy: $sortBy, tags: $tags, term: $term, page: $page) {\n    suggestion {\n      displayOrder\n      id\n      name\n    }\n    songs {\n      albumCoverFilePath\n      albumDescription\n      albumId\n      albumImageFilePath\n      albumName\n      albumNameForURL\n      albumShortDescription\n      albumThumbFilePath\n      albumThumbPath\n      artistDisplayName\n      artistId\n      artistName\n      artistUrl\n      assetId\n      assetTypeId\n      createTime\n      displayOrder\n      duration\n      durationMax\n      durationTime\n      priorityTags {\n        name\n        displayOrder\n        id\n      }\n      grandChildCategories {\n        id\n        name\n        parentName\n      }\n      indexTime\n      isNew\n      isOriginal\n      isVocal\n      lyrics\n      nameForURL\n      orderCount\n      originalVersionID\n      otherTags {\n        displayOrder\n        id\n        name\n      }\n      priorityTagsOneWord {\n        displayOrder\n        id\n        name\n      }\n      priorityTagsTwoWords {\n        displayOrder\n        id\n        name\n      }\n      productType\n      publishTime\n      rate\n      relativeUrl\n      similarSongs\n      sitePlayableFilePath\n      sonCategories {\n        id\n        name\n        parentName\n      }\n      songCategories\n      songId\n      songName\n      staffPickCategories {\n        categoryId\n        description\n        displayOrder\n        id\n        name\n        typeId\n      }\n      staffPicks {\n        categoryId\n        description\n        displayOrder\n        id\n        name\n        typeId\n      }\n      tempoCategoryValue\n      waveSurferFilePath\n    }\n  }\n}\n\"</span>,\n  <span class=\"string key\">\"variables\"</span>: {\n    <span class=\"string key\">\"categoryIds\"</span>: <span class=\"string value\">\"\"</span>,\n    <span class=\"string key\">\"term\"</span>: <span class=\"string value\">\"camera\"</span>,\n    <span class=\"string key\">\"tags\"</span>: <span class=\"string value\">\"shutter\"</span>,\n    <span class=\"string key\">\"page\"</span>: <span class=\"number\">1</span>,\n    <span class=\"string key\">\"sortBy\"</span>: <span class=\"string value\">\"STAFF_PICKS\"</span>\n  }\n}</pre>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"\"before each\" hook: beforeEach for \"Verify that tags count as search term with semantic engine\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"\"before each\" hook for \"Verify that tags count as search term with semantic engine\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"\"before all\" hook: beforeAll in \"{root}\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"descriptionHtml":"<pre>Test user that add tags to the search term, verify that:70% of the returned tracks are associated with the TERM+TAGS from the dataset. {\n  <span class=\"string key\">\"query\"</span>: <span class=\"string value\">\"query SfxList($categoryIds: String!, $sortBy: SfxListRequestSortByOptions!, $tags: String!, $term: String!, $page: Float!) {\n  sfxList(categoryIds: $categoryIds, sortBy: $sortBy, tags: $tags, term: $term, page: $page) {\n    suggestion {\n      displayOrder\n      id\n      name\n    }\n    songs {\n      albumCoverFilePath\n      albumDescription\n      albumId\n      albumImageFilePath\n      albumName\n      albumNameForURL\n      albumShortDescription\n      albumThumbFilePath\n      albumThumbPath\n      artistDisplayName\n      artistId\n      artistName\n      artistUrl\n      assetId\n      assetTypeId\n      createTime\n      displayOrder\n      duration\n      durationMax\n      durationTime\n      priorityTags {\n        name\n        displayOrder\n        id\n      }\n      grandChildCategories {\n        id\n        name\n        parentName\n      }\n      indexTime\n      isNew\n      isOriginal\n      isVocal\n      lyrics\n      nameForURL\n      orderCount\n      originalVersionID\n      otherTags {\n        displayOrder\n        id\n        name\n      }\n      priorityTagsOneWord {\n        displayOrder\n        id\n        name\n      }\n      priorityTagsTwoWords {\n        displayOrder\n        id\n        name\n      }\n      productType\n      publishTime\n      rate\n      relativeUrl\n      similarSongs\n      sitePlayableFilePath\n      sonCategories {\n        id\n        name\n        parentName\n      }\n      songCategories\n      songId\n      songName\n      staffPickCategories {\n        categoryId\n        description\n        displayOrder\n        id\n        name\n        typeId\n      }\n      staffPicks {\n        categoryId\n        description\n        displayOrder\n        id\n        name\n        typeId\n      }\n      tempoCategoryValue\n      waveSurferFilePath\n    }\n  }\n}\n\"</span>,\n  <span class=\"string key\">\"variables\"</span>: {\n    <span class=\"string key\">\"categoryIds\"</span>: <span class=\"string value\">\"\"</span>,\n    <span class=\"string key\">\"term\"</span>: <span class=\"string value\">\"camera\"</span>,\n    <span class=\"string key\">\"tags\"</span>: <span class=\"string value\">\"shutter\"</span>,\n    <span class=\"string key\">\"page\"</span>: <span class=\"number\">1</span>,\n    <span class=\"string key\">\"sortBy\"</span>: <span class=\"string value\">\"STAFF_PICKS\"</span>\n  }\n}</pre>","status":"passed","steps":[],"attachments":[{"uid":"1d73bce79412a5d3","name":"cURL","source":"1d73bce79412a5d3.txt","type":"text/plain","size":2161},{"uid":"bb963672a7a99462","name":"Un returned mandatory entities","source":"bb963672a7a99462.txt","type":"text/plain","size":302},{"uid":"8043f8aad31daf74","name":"Expected results for camera shutter","source":"8043f8aad31daf74.txt","type":"text/plain","size":2895},{"uid":"7f59631e1d208d0","name":"Number of stories in the response","source":"7f59631e1d208d0.txt","type":"text/plain","size":1},{"uid":"ccd6360ab442e29a","name":"Stories IDs","source":"ccd6360ab442e29a.txt","type":"text/plain","size":6},{"uid":"edd2b41d06809093","name":"Full response ","source":"edd2b41d06809093.txt","type":"text/plain","size":38409}],"parameters":[],"stepsCount":0,"attachmentsCount":6,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[{"name":"\"after each\" hook: afterEach for \"Verify that tags count as search term with semantic engine\"","time":{},"status":"passed","steps":[],"attachments":[{"uid":"db300eeef590a43e","name":"cURL","source":"db300eeef590a43e.txt","type":"text/plain","size":2161}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"\"after all\" hook: afterAll in \"{root}\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"package","value":"src.searchApi.sfx.tests.listApi.searchTerm"},{"name":"parentSuite","value":"SFX"},{"name":"suite","value":"SFX | Search term | Semantical search tests | engine: vespa | #SFX_AI"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Initial","value":""},{"name":"Page","value":"24"},{"name":"Search engine","value":"vespa"},{"name":"Search term","value":"camera"},{"name":"Status ","value":"200"},{"name":"Tags","value":"shutter"},{"name":"Test ID","value":"c688"},{"name":"URL","value":"https://dev-search-api.artlist.me/v1/graphql"},{"name":"URL environment","value":"https://dev-search-api.artlist.me/v1/graphql"}],"links":[{"name":"Automation dashboard","url":"https://automation-dashboard-dev.artlist.io/","type":"issue"},{"name":"Skip tests via automation dashboard UI","url":"https://artlistprojects.atlassian.net/wiki/spaces/RD/pages/571047959/Skip+tests+via+automation+dashboard+UI","type":"issue"},{"name":"Automation playbook","url":"https://artlistprojects.atlassian.net/l/cp/KWZk4RV0","type":"issue"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"92236d49c45c193e.json","parameterValues":["","24","vespa","camera","200","shutter","c688","https://dev-search-api.artlist.me/v1/graphql","https://dev-search-api.artlist.me/v1/graphql"]}